C:37:"PHPUnit\Runner\DefaultTestResultCache":26177:{a:2:{s:7:"defects";a:71:{s:59:"ValueObjects\Tests\Boolean\BoolLiteralTest::testSameValueAs";i:4;s:69:"ValueObjects\Tests\DateTime\DateTimeWithTimeZoneTest::testSameValueAs";i:4;s:73:"ValueObjects\Tests\DateTime\DateTimeWithTimeZoneTest::testSameTimestampAs";i:4;s:53:"ValueObjects\Tests\DateTime\HourTest::testInvalidHour";i:4;s:57:"ValueObjects\Tests\DateTime\MinuteTest::testInvalidMinute";i:4;s:61:"ValueObjects\Tests\DateTime\MonthDayTest::testInvalidMonthDay";i:4;s:57:"ValueObjects\Tests\DateTime\SecondTest::testInvalidSecond";i:4;s:53:"ValueObjects\Tests\DateTime\TimeTest::testSameValueAs";i:4;s:57:"ValueObjects\Tests\DateTime\TimeZoneTest::testSameValueAs";i:4;s:76:"ValueObjects\Tests\DateTime\TimeZoneTest::testExceptionOnInvalidTimeZoneName";i:4;s:49:"ValueObjects\Tests\Enum\EnumTest::testSameValueAs";i:4;s:46:"ValueObjects\Tests\Enum\EnumTest::testToString";i:4;s:63:"ValueObjects\Tests\Geography\AddressTest::testInvalidFromNative";i:4;s:57:"ValueObjects\Tests\Geography\AddressTest::testSameValueAs";i:4;s:66:"ValueObjects\Tests\Geography\CoordinateTest::testInvalidFromNative";i:4;s:60:"ValueObjects\Tests\Geography\CoordinateTest::testSameValueAs";i:4;s:57:"ValueObjects\Tests\Geography\CountryTest::testSameValueAs";i:4;s:60:"ValueObjects\Tests\Geography\LatitudeTest::testValidLatitude";i:5;s:62:"ValueObjects\Tests\Geography\LatitudeTest::testInvalidLatitude";i:3;s:62:"ValueObjects\Tests\Geography\LongitudeTest::testValidLongitude";i:5;s:64:"ValueObjects\Tests\Geography\LongitudeTest::testInvalidLongitude";i:3;s:62:"ValueObjects\Tests\Geography\StreetTest::testInvalidFromNative";i:4;s:56:"ValueObjects\Tests\Geography\StreetTest::testSameValueAs";i:4;s:68:"ValueObjects\Tests\Identity\MacAddressTest::testTooBigNativeArgument";i:4;s:70:"ValueObjects\Tests\Identity\MacAddressTest::testNegativeNativeArgument";i:4;s:85:"ValueObjects\Tests\Identity\MacAddressTest::testInvalidMacAddressWithBothDashAndColon";i:4;s:80:"ValueObjects\Tests\Identity\MacAddressTest::testInvalidMacAddressWithWrongLength";i:4;s:58:"ValueObjects\Tests\Identity\UUIDTest::testGenerateAsString";i:6;s:53:"ValueObjects\Tests\Identity\UUIDTest::testSameValueAs";i:4;s:49:"ValueObjects\Tests\Identity\UUIDTest::testInvalid";i:4;s:54:"ValueObjects\Tests\Money\CurrencyTest::testSameValueAs";i:4;s:51:"ValueObjects\Tests\Money\MoneyTest::testSameValueAs";i:4;s:58:"ValueObjects\Tests\NullValue\NullValueTest::testFromNative";i:4;s:85:"ValueObjects\Tests\Number\ComplexTest::testFromNativeWithWrongNumberOfArgsThrowsError";i:4;s:54:"ValueObjects\Tests\Number\IntegerTest::testSameValueAs";i:4;s:64:"ValueObjects\Tests\Number\IntegerTest::testInvalidNativeArgument";i:3;s:64:"ValueObjects\Tests\Number\NaturalTest::testInvalidNativeArgument";i:4;s:51:"ValueObjects\Tests\Number\RealTest::testSameValueAs";i:4;s:61:"ValueObjects\Tests\Number\RealTest::testInvalidNativeArgument";i:3;s:48:"ValueObjects\Tests\Number\RealTest::testToString";i:3;s:50:"ValueObjects\Tests\Number\AgeTest::testSameValueAs";i:4;s:53:"ValueObjects\Tests\Number\GenderTest::testSameValueAs";i:4;s:51:"ValueObjects\Tests\Person\NameTest::testSameValueAs";i:4;s:67:"ValueObjects\Tests\StringLiteral\StringLiteralTest::testSameValueAs";i:4;s:77:"ValueObjects\Tests\StringLiteral\StringLiteralTest::testInvalidNativeArgument";i:3;s:64:"ValueObjects\Tests\Structure\CollectionTest::testInvalidArgument";i:4;s:60:"ValueObjects\Tests\Structure\CollectionTest::testSameValueAs";i:4;s:64:"ValueObjects\Tests\Structure\DictionaryTest::testInvalidArgument";i:4;s:68:"ValueObjects\Tests\Structure\KeyValuePairTest::testInvalidFromNative";i:4;s:62:"ValueObjects\Tests\Structure\KeyValuePairTest::testSameValueAs";i:4;s:64:"ValueObjects\Tests\Web\EmailAddressTest::testInvalidEmailAddress";i:4;s:76:"ValueObjects\Tests\Web\FragmentIdentifierTest::testInvalidFragmentIdentifier";i:4;s:56:"ValueObjects\Tests\Web\HostnameTest::testInvalidHostname";i:4;s:58:"ValueObjects\Tests\Web\IPAddressTest::testInvalidIPAddress";i:4;s:62:"ValueObjects\Tests\Web\IPv4AddressTest::testInvalidIPv4Address";i:4;s:62:"ValueObjects\Tests\Web\IPv6AddressTest::testInvalidIPv6Address";i:4;s:48:"ValueObjects\Tests\Web\PathTest::testInvalidPath";i:4;s:60:"ValueObjects\Tests\Web\PortNumberTest::testInvalidPortNumber";i:4;s:62:"ValueObjects\Tests\Web\QueryStringTest::testInvalidQueryString";i:4;s:60:"ValueObjects\Tests\Web\SchemeNameTest::testInvalidSchemeName";i:4;s:47:"ValueObjects\Tests\Web\UrlTest::testSameValueAs";i:4;s:69:"ValueObjects\Tests\Boolean\BoolLiteralTest::testInvalidNativeArgument";i:3;s:63:"ValueObjects\Tests\Identity\MacAddressTest::testToStringWithDot";i:3;s:73:"ValueObjects\Tests\Web\FragmentIdentifierTest::testNullFragmentIdentifier";i:4;s:60:"ValueObjects\Tests\Web\QueryStringTest::testEmptyQueryString";i:4;s:46:"ValueObjects\Tests\Web\UrlTest::testFromNative";i:4;s:55:"ValueObjects\Tests\Web\UrlTest::testAuthlessUrlToString";i:4;s:61:"ValueObjects\Tests\Geography\CoordinateTest::testDistanceFrom";i:3;s:52:"ValueObjects\Tests\Number\ComplexTest::testFromPolar";i:3;s:53:"ValueObjects\Tests\Number\ComplexTest::testGetModulus";i:3;s:54:"ValueObjects\Tests\Number\ComplexTest::testGetArgument";i:3;}s:5:"times";a:292:{s:82:"ValueObjects\Tests\Boolean\BoolLiteralTest::testFromBooleanString with data set #0";d:0.002;s:82:"ValueObjects\Tests\Boolean\BoolLiteralTest::testFromBooleanString with data set #1";d:0;s:82:"ValueObjects\Tests\Boolean\BoolLiteralTest::testFromBooleanString with data set #2";d:0;s:82:"ValueObjects\Tests\Boolean\BoolLiteralTest::testFromBooleanString with data set #3";d:0;s:82:"ValueObjects\Tests\Boolean\BoolLiteralTest::testFromBooleanString with data set #4";d:0;s:82:"ValueObjects\Tests\Boolean\BoolLiteralTest::testFromBooleanString with data set #5";d:0;s:82:"ValueObjects\Tests\Boolean\BoolLiteralTest::testFromBooleanString with data set #6";d:0;s:82:"ValueObjects\Tests\Boolean\BoolLiteralTest::testFromBooleanString with data set #7";d:0;s:82:"ValueObjects\Tests\Boolean\BoolLiteralTest::testFromBooleanString with data set #8";d:0;s:58:"ValueObjects\Tests\Boolean\BoolLiteralTest::testFromNative";d:0;s:56:"ValueObjects\Tests\Boolean\BoolLiteralTest::testToNative";d:0;s:59:"ValueObjects\Tests\Boolean\BoolLiteralTest::testSameValueAs";d:0.004;s:69:"ValueObjects\Tests\Boolean\BoolLiteralTest::testInvalidNativeArgument";d:0.001;s:56:"ValueObjects\Tests\Boolean\BoolLiteralTest::testToString";d:0;s:77:"ValueObjects\Tests\Boolean\BooleanStringTest::testFromNative with data set #0";d:0;s:77:"ValueObjects\Tests\Boolean\BooleanStringTest::testFromNative with data set #1";d:0;s:77:"ValueObjects\Tests\Boolean\BooleanStringTest::testFromNative with data set #2";d:0;s:77:"ValueObjects\Tests\Boolean\BooleanStringTest::testFromNative with data set #3";d:0;s:77:"ValueObjects\Tests\Boolean\BooleanStringTest::testFromNative with data set #4";d:0;s:77:"ValueObjects\Tests\Boolean\BooleanStringTest::testFromNative with data set #5";d:0;s:77:"ValueObjects\Tests\Boolean\BooleanStringTest::testFromNative with data set #6";d:0;s:77:"ValueObjects\Tests\Boolean\BooleanStringTest::testFromNative with data set #7";d:0;s:77:"ValueObjects\Tests\Boolean\BooleanStringTest::testFromNative with data set #8";d:0;s:71:"ValueObjects\Tests\Boolean\BooleanStringTest::testInvalidNativeArgument";d:0.001;s:73:"ValueObjects\Tests\Boolean\BooleanStringTest::testToBool with data set #0";d:0;s:73:"ValueObjects\Tests\Boolean\BooleanStringTest::testToBool with data set #1";d:0;s:73:"ValueObjects\Tests\Boolean\BooleanStringTest::testToBool with data set #2";d:0;s:73:"ValueObjects\Tests\Boolean\BooleanStringTest::testToBool with data set #3";d:0;s:73:"ValueObjects\Tests\Boolean\BooleanStringTest::testToBool with data set #4";d:0;s:73:"ValueObjects\Tests\Boolean\BooleanStringTest::testToBool with data set #5";d:0;s:73:"ValueObjects\Tests\Boolean\BooleanStringTest::testToBool with data set #6";d:0;s:73:"ValueObjects\Tests\Boolean\BooleanStringTest::testToBool with data set #7";d:0;s:73:"ValueObjects\Tests\Boolean\BooleanStringTest::testToBool with data set #8";d:0;s:70:"ValueObjects\Tests\Climate\CelsiusTest::testToCelsius with data set #0";d:0;s:69:"ValueObjects\Tests\Climate\CelsiusTest::testToKelvin with data set #0";d:0;s:73:"ValueObjects\Tests\Climate\CelsiusTest::testToFahrenheit with data set #0";d:0;s:73:"ValueObjects\Tests\Climate\FahrenheitTest::testToCelsius with data set #0";d:0;s:72:"ValueObjects\Tests\Climate\FahrenheitTest::testToKelvin with data set #0";d:0;s:76:"ValueObjects\Tests\Climate\FahrenheitTest::testToFahrenheit with data set #0";d:0;s:69:"ValueObjects\Tests\Climate\KelvinTest::testToCelsius with data set #0";d:0;s:68:"ValueObjects\Tests\Climate\KelvinTest::testToKelvin with data set #0";d:0;s:72:"ValueObjects\Tests\Climate\KelvinTest::testToFahrenheit with data set #0";d:0;s:63:"ValueObjects\Tests\Climate\RelativeHumidityTest::testFromNative";d:0;s:76:"ValueObjects\Tests\Climate\RelativeHumidityTest::testInvalidRelativeHumidity";d:0;s:52:"ValueObjects\Tests\DateTime\DateTest::testFromNative";d:0.001;s:60:"ValueObjects\Tests\DateTime\DateTest::testFromNativeDateTime";d:0;s:45:"ValueObjects\Tests\DateTime\DateTest::testNow";d:0;s:66:"ValueObjects\Tests\DateTime\DateTest::testAlmostValidDateException";d:0;s:53:"ValueObjects\Tests\DateTime\DateTest::testSameValueAs";d:0;s:49:"ValueObjects\Tests\DateTime\DateTest::testGetYear";d:0;s:50:"ValueObjects\Tests\DateTime\DateTest::testGetMonth";d:0;s:48:"ValueObjects\Tests\DateTime\DateTest::testGetDay";d:0;s:58:"ValueObjects\Tests\DateTime\DateTest::testToNativeDateTime";d:0;s:50:"ValueObjects\Tests\DateTime\DateTest::testToString";d:0;s:56:"ValueObjects\Tests\DateTime\DateTimeTest::testFromNative";d:0.001;s:64:"ValueObjects\Tests\DateTime\DateTimeTest::testFromNativeDateTime";d:0;s:49:"ValueObjects\Tests\DateTime\DateTimeTest::testNow";d:0;s:54:"ValueObjects\Tests\DateTime\DateTimeTest::testNullTime";d:0;s:57:"ValueObjects\Tests\DateTime\DateTimeTest::testSameValueAs";d:0;s:53:"ValueObjects\Tests\DateTime\DateTimeTest::testGetDate";d:0;s:53:"ValueObjects\Tests\DateTime\DateTimeTest::testGetTime";d:0;s:62:"ValueObjects\Tests\DateTime\DateTimeTest::testToNativeDateTime";d:0;s:54:"ValueObjects\Tests\DateTime\DateTimeTest::testToString";d:0;s:68:"ValueObjects\Tests\DateTime\DateTimeWithTimeZoneTest::testFromNative";d:0.001;s:76:"ValueObjects\Tests\DateTime\DateTimeWithTimeZoneTest::testFromNativeDateTime";d:0;s:61:"ValueObjects\Tests\DateTime\DateTimeWithTimeZoneTest::testNow";d:0;s:69:"ValueObjects\Tests\DateTime\DateTimeWithTimeZoneTest::testSameValueAs";d:0.001;s:73:"ValueObjects\Tests\DateTime\DateTimeWithTimeZoneTest::testSameTimestampAs";d:0.001;s:69:"ValueObjects\Tests\DateTime\DateTimeWithTimeZoneTest::testGetDateTime";d:0;s:69:"ValueObjects\Tests\DateTime\DateTimeWithTimeZoneTest::testGetTimeZone";d:0;s:74:"ValueObjects\Tests\DateTime\DateTimeWithTimeZoneTest::testToNativeDateTime";d:0;s:66:"ValueObjects\Tests\DateTime\DateTimeWithTimeZoneTest::testToString";d:0;s:52:"ValueObjects\Tests\DateTime\HourTest::testFromNative";d:0;s:45:"ValueObjects\Tests\DateTime\HourTest::testNow";d:0;s:53:"ValueObjects\Tests\DateTime\HourTest::testInvalidHour";d:0;s:54:"ValueObjects\Tests\DateTime\MinuteTest::testFromNative";d:0;s:47:"ValueObjects\Tests\DateTime\MinuteTest::testNow";d:0;s:57:"ValueObjects\Tests\DateTime\MinuteTest::testInvalidMinute";d:0;s:49:"ValueObjects\Tests\DateTime\MonthDayTest::testNow";d:0;s:61:"ValueObjects\Tests\DateTime\MonthDayTest::testInvalidMonthDay";d:0;s:46:"ValueObjects\Tests\DateTime\MonthTest::testNow";d:0;s:61:"ValueObjects\Tests\DateTime\MonthTest::testFromNativeDateTime";d:0;s:58:"ValueObjects\Tests\DateTime\MonthTest::testGetNumericValue";d:0;s:54:"ValueObjects\Tests\DateTime\SecondTest::testFromNative";d:0;s:47:"ValueObjects\Tests\DateTime\SecondTest::testNow";d:0;s:57:"ValueObjects\Tests\DateTime\SecondTest::testInvalidSecond";d:0;s:52:"ValueObjects\Tests\DateTime\TimeTest::testFromNative";d:0;s:60:"ValueObjects\Tests\DateTime\TimeTest::testFromNativeDateTime";d:0;s:45:"ValueObjects\Tests\DateTime\TimeTest::testNow";d:0;s:46:"ValueObjects\Tests\DateTime\TimeTest::testZero";d:0;s:53:"ValueObjects\Tests\DateTime\TimeTest::testSameValueAs";d:0;s:49:"ValueObjects\Tests\DateTime\TimeTest::testGetHour";d:0;s:51:"ValueObjects\Tests\DateTime\TimeTest::testGetMinute";d:0;s:51:"ValueObjects\Tests\DateTime\TimeTest::testGetSecond";d:0;s:58:"ValueObjects\Tests\DateTime\TimeTest::testToNativeDateTime";d:0;s:50:"ValueObjects\Tests\DateTime\TimeTest::testToString";d:0;s:56:"ValueObjects\Tests\DateTime\TimeZoneTest::testFromNative";d:0;s:68:"ValueObjects\Tests\DateTime\TimeZoneTest::testFromNativeDateTimeZone";d:0;s:55:"ValueObjects\Tests\DateTime\TimeZoneTest::testDefaultTz";d:0;s:57:"ValueObjects\Tests\DateTime\TimeZoneTest::testSameValueAs";d:0;s:53:"ValueObjects\Tests\DateTime\TimeZoneTest::testGetName";d:0;s:66:"ValueObjects\Tests\DateTime\TimeZoneTest::testToNativeDateTimeZone";d:0;s:54:"ValueObjects\Tests\DateTime\TimeZoneTest::testToString";d:0;s:76:"ValueObjects\Tests\DateTime\TimeZoneTest::testExceptionOnInvalidTimeZoneName";d:0;s:48:"ValueObjects\Tests\DateTime\WeekDayTest::testNow";d:0;s:63:"ValueObjects\Tests\DateTime\WeekDayTest::testFromNativeDateTime";d:0;s:60:"ValueObjects\Tests\DateTime\WeekDayTest::testGetNumericValue";d:0;s:45:"ValueObjects\Tests\DateTime\YearTest::testNow";d:0;s:49:"ValueObjects\Tests\Enum\EnumTest::testSameValueAs";d:0.003;s:46:"ValueObjects\Tests\Enum\EnumTest::testToString";d:0;s:56:"ValueObjects\Tests\Geography\AddressTest::testFromNative";d:0.003;s:63:"ValueObjects\Tests\Geography\AddressTest::testInvalidFromNative";d:0;s:57:"ValueObjects\Tests\Geography\AddressTest::testSameValueAs";d:0;s:53:"ValueObjects\Tests\Geography\AddressTest::testGetName";d:0;s:55:"ValueObjects\Tests\Geography\AddressTest::testGetStreet";d:0;s:57:"ValueObjects\Tests\Geography\AddressTest::testGetDistrict";d:0;s:53:"ValueObjects\Tests\Geography\AddressTest::testGetCity";d:0;s:55:"ValueObjects\Tests\Geography\AddressTest::testGetRegion";d:0;s:59:"ValueObjects\Tests\Geography\AddressTest::testGetPostalCode";d:0;s:56:"ValueObjects\Tests\Geography\AddressTest::testGetCountry";d:0;s:54:"ValueObjects\Tests\Geography\AddressTest::testToString";d:0.001;s:73:"ValueObjects\Tests\Geography\CoordinateTest::testNullConstructorEllipsoid";d:0.001;s:59:"ValueObjects\Tests\Geography\CoordinateTest::testFromNative";d:0;s:66:"ValueObjects\Tests\Geography\CoordinateTest::testInvalidFromNative";d:0;s:60:"ValueObjects\Tests\Geography\CoordinateTest::testSameValueAs";d:0.001;s:72:"ValueObjects\Tests\Geography\CoordinateTest::testToDegreesMinutesSeconds";d:0.001;s:65:"ValueObjects\Tests\Geography\CoordinateTest::testToDecimalMinutes";d:0;s:78:"ValueObjects\Tests\Geography\CoordinateTest::testToUniversalTransverseMercator";d:0.001;s:61:"ValueObjects\Tests\Geography\CoordinateTest::testDistanceFrom";d:0.001;s:57:"ValueObjects\Tests\Geography\CoordinateTest::testToString";d:0;s:61:"ValueObjects\Tests\Geography\CountryCodeNameTest::testGetName";d:0;s:56:"ValueObjects\Tests\Geography\CountryTest::testFromNative";d:0;s:57:"ValueObjects\Tests\Geography\CountryTest::testSameValueAs";d:0.001;s:53:"ValueObjects\Tests\Geography\CountryTest::testGetCode";d:0;s:53:"ValueObjects\Tests\Geography\CountryTest::testGetName";d:0;s:54:"ValueObjects\Tests\Geography\CountryTest::testToString";d:0;s:60:"ValueObjects\Tests\Geography\LatitudeTest::testValidLatitude";d:0;s:60:"ValueObjects\Tests\Geography\LatitudeTest::testNormalization";d:0;s:62:"ValueObjects\Tests\Geography\LatitudeTest::testInvalidLatitude";d:0;s:62:"ValueObjects\Tests\Geography\LongitudeTest::testValidLongitude";d:0;s:61:"ValueObjects\Tests\Geography\LongitudeTest::testNormalization";d:0;s:64:"ValueObjects\Tests\Geography\LongitudeTest::testInvalidLongitude";d:0;s:55:"ValueObjects\Tests\Geography\StreetTest::testFromNative";d:0;s:62:"ValueObjects\Tests\Geography\StreetTest::testInvalidFromNative";d:0;s:56:"ValueObjects\Tests\Geography\StreetTest::testSameValueAs";d:0;s:52:"ValueObjects\Tests\Geography\StreetTest::testGetName";d:0;s:54:"ValueObjects\Tests\Geography\StreetTest::testGetNumber";d:0;s:56:"ValueObjects\Tests\Geography\StreetTest::testGetElements";d:0;s:53:"ValueObjects\Tests\Geography\StreetTest::testToString";d:0;s:68:"ValueObjects\Tests\Identity\MacAddressTest::testTooBigNativeArgument";d:0;s:70:"ValueObjects\Tests\Identity\MacAddressTest::testNegativeNativeArgument";d:0;s:67:"ValueObjects\Tests\Identity\MacAddressTest::testValidNativeArgument";d:0;s:71:"ValueObjects\Tests\Identity\MacAddressTest::testValidMacAddressWithDash";d:0;s:72:"ValueObjects\Tests\Identity\MacAddressTest::testValidMacAddressWithColon";d:0;s:70:"ValueObjects\Tests\Identity\MacAddressTest::testValidMacAddressWithDot";d:0;s:85:"ValueObjects\Tests\Identity\MacAddressTest::testInvalidMacAddressWithBothDashAndColon";d:0;s:80:"ValueObjects\Tests\Identity\MacAddressTest::testInvalidMacAddressWithWrongLength";d:0;s:93:"ValueObjects\Tests\Identity\MacAddressTest::testDashMacAddressAndColonMacAddressHaveSameValue";d:0;s:91:"ValueObjects\Tests\Identity\MacAddressTest::testDashMacAddressAndDotMacAddressHaveSameValue";d:0;s:64:"ValueObjects\Tests\Identity\MacAddressTest::testToStringWithDash";d:0;s:65:"ValueObjects\Tests\Identity\MacAddressTest::testToStringWithColon";d:0;s:63:"ValueObjects\Tests\Identity\MacAddressTest::testToStringWithDot";d:0;s:58:"ValueObjects\Tests\Identity\UUIDTest::testGenerateAsString";d:0.008;s:52:"ValueObjects\Tests\Identity\UUIDTest::testFromNative";d:0;s:53:"ValueObjects\Tests\Identity\UUIDTest::testSameValueAs";d:0;s:49:"ValueObjects\Tests\Identity\UUIDTest::testInvalid";d:0;s:53:"ValueObjects\Tests\Money\CurrencyTest::testFromNative";d:0.002;s:54:"ValueObjects\Tests\Money\CurrencyTest::testSameValueAs";d:0.001;s:50:"ValueObjects\Tests\Money\CurrencyTest::testGetCode";d:0.001;s:51:"ValueObjects\Tests\Money\CurrencyTest::testToString";d:0;s:50:"ValueObjects\Tests\Money\MoneyTest::testFromNative";d:0.001;s:51:"ValueObjects\Tests\Money\MoneyTest::testSameValueAs";d:0;s:49:"ValueObjects\Tests\Money\MoneyTest::testGetAmount";d:0;s:51:"ValueObjects\Tests\Money\MoneyTest::testGetCurrency";d:0;s:43:"ValueObjects\Tests\Money\MoneyTest::testAdd";d:0;s:51:"ValueObjects\Tests\Money\MoneyTest::testAddNegative";d:0;s:48:"ValueObjects\Tests\Money\MoneyTest::testMultiply";d:0;s:55:"ValueObjects\Tests\Money\MoneyTest::testMultiplyInverse";d:0;s:48:"ValueObjects\Tests\Money\MoneyTest::testToString";d:0;s:58:"ValueObjects\Tests\NullValue\NullValueTest::testFromNative";d:0;s:59:"ValueObjects\Tests\NullValue\NullValueTest::testSameValueAs";d:0;s:54:"ValueObjects\Tests\NullValue\NullValueTest::testCreate";d:0;s:56:"ValueObjects\Tests\NullValue\NullValueTest::testToString";d:0;s:53:"ValueObjects\Tests\Number\ComplexTest::testFromNative";d:0;s:85:"ValueObjects\Tests\Number\ComplexTest::testFromNativeWithWrongNumberOfArgsThrowsError";d:0;s:52:"ValueObjects\Tests\Number\ComplexTest::testFromPolar";d:0;s:51:"ValueObjects\Tests\Number\ComplexTest::testToNative";d:0;s:50:"ValueObjects\Tests\Number\ComplexTest::testGetReal";d:0;s:48:"ValueObjects\Tests\Number\ComplexTest::testGetIm";d:0;s:53:"ValueObjects\Tests\Number\ComplexTest::testGetModulus";d:0;s:54:"ValueObjects\Tests\Number\ComplexTest::testGetArgument";d:0;s:51:"ValueObjects\Tests\Number\ComplexTest::testToString";d:0;s:55:"ValueObjects\Tests\Number\ComplexTest::testNotSameValue";d:0;s:51:"ValueObjects\Tests\Number\IntegerTest::testToNative";d:0;s:54:"ValueObjects\Tests\Number\IntegerTest::testSameValueAs";d:0;s:51:"ValueObjects\Tests\Number\IntegerTest::testToString";d:0;s:64:"ValueObjects\Tests\Number\IntegerTest::testInvalidNativeArgument";d:0;s:55:"ValueObjects\Tests\Number\IntegerTest::testZeroToString";d:0;s:49:"ValueObjects\Tests\Number\IntegerTest::testToReal";d:0;s:64:"ValueObjects\Tests\Number\NaturalTest::testInvalidNativeArgument";d:0;s:50:"ValueObjects\Tests\Number\RealTest::testFromNative";d:0;s:48:"ValueObjects\Tests\Number\RealTest::testToNative";d:0;s:51:"ValueObjects\Tests\Number\RealTest::testSameValueAs";d:0;s:61:"ValueObjects\Tests\Number\RealTest::testInvalidNativeArgument";d:0.007;s:49:"ValueObjects\Tests\Number\RealTest::testToInteger";d:0;s:49:"ValueObjects\Tests\Number\RealTest::testToNatural";d:0;s:48:"ValueObjects\Tests\Number\RealTest::testToString";d:0;s:47:"ValueObjects\Tests\Number\AgeTest::testToNative";d:0;s:50:"ValueObjects\Tests\Number\AgeTest::testSameValueAs";d:0;s:47:"ValueObjects\Tests\Number\AgeTest::testToString";d:0;s:50:"ValueObjects\Tests\Number\GenderTest::testToNative";d:0;s:53:"ValueObjects\Tests\Number\GenderTest::testSameValueAs";d:0.001;s:50:"ValueObjects\Tests\Number\GenderTest::testToString";d:0;s:50:"ValueObjects\Tests\Person\NameTest::testFromNative";d:0;s:52:"ValueObjects\Tests\Person\NameTest::testGetFirstName";d:0;s:53:"ValueObjects\Tests\Person\NameTest::testGetMiddleName";d:0;s:51:"ValueObjects\Tests\Person\NameTest::testGetLastName";d:0;s:51:"ValueObjects\Tests\Person\NameTest::testGetFullName";d:0;s:53:"ValueObjects\Tests\Person\NameTest::testEmptyFullName";d:0;s:51:"ValueObjects\Tests\Person\NameTest::testSameValueAs";d:0;s:48:"ValueObjects\Tests\Person\NameTest::testToString";d:0;s:66:"ValueObjects\Tests\StringLiteral\StringLiteralTest::testFromNative";d:0;s:64:"ValueObjects\Tests\StringLiteral\StringLiteralTest::testToNative";d:0;s:67:"ValueObjects\Tests\StringLiteral\StringLiteralTest::testSameValueAs";d:0;s:77:"ValueObjects\Tests\StringLiteral\StringLiteralTest::testInvalidNativeArgument";d:0;s:63:"ValueObjects\Tests\StringLiteral\StringLiteralTest::testIsEmpty";d:0;s:64:"ValueObjects\Tests\StringLiteral\StringLiteralTest::testToString";d:0;s:64:"ValueObjects\Tests\Structure\CollectionTest::testInvalidArgument";d:0.001;s:59:"ValueObjects\Tests\Structure\CollectionTest::testFromNative";d:0;s:60:"ValueObjects\Tests\Structure\CollectionTest::testSameValueAs";d:0;s:54:"ValueObjects\Tests\Structure\CollectionTest::testCount";d:0;s:57:"ValueObjects\Tests\Structure\CollectionTest::testContains";d:0;s:56:"ValueObjects\Tests\Structure\CollectionTest::testToArray";d:0.001;s:57:"ValueObjects\Tests\Structure\CollectionTest::testToString";d:0;s:59:"ValueObjects\Tests\Structure\DictionaryTest::testFromNative";d:0.001;s:64:"ValueObjects\Tests\Structure\DictionaryTest::testInvalidArgument";d:0;s:53:"ValueObjects\Tests\Structure\DictionaryTest::testKeys";d:0;s:55:"ValueObjects\Tests\Structure\DictionaryTest::testValues";d:0;s:60:"ValueObjects\Tests\Structure\DictionaryTest::testContainsKey";d:0;s:62:"ValueObjects\Tests\Structure\DictionaryTest::testContainsValue";d:0;s:61:"ValueObjects\Tests\Structure\KeyValuePairTest::testFromNative";d:0;s:68:"ValueObjects\Tests\Structure\KeyValuePairTest::testInvalidFromNative";d:0;s:62:"ValueObjects\Tests\Structure\KeyValuePairTest::testSameValueAs";d:0;s:57:"ValueObjects\Tests\Structure\KeyValuePairTest::testGetKey";d:0;s:59:"ValueObjects\Tests\Structure\KeyValuePairTest::testGetValue";d:0;s:59:"ValueObjects\Tests\Structure\KeyValuePairTest::testToString";d:0;s:49:"ValueObjects\Tests\Util\UtilTest::testClassEquals";d:0;s:54:"ValueObjects\Tests\Util\UtilTest::testGetClassAsString";d:0;s:50:"ValueObjects\Tests\Web\DomainTest::testSpecifyType";d:0.003;s:62:"ValueObjects\Tests\Web\EmailAddressTest::testValidEmailAddress";d:0.001;s:64:"ValueObjects\Tests\Web\EmailAddressTest::testInvalidEmailAddress";d:0;s:57:"ValueObjects\Tests\Web\EmailAddressTest::testGetLocalPart";d:0;s:58:"ValueObjects\Tests\Web\EmailAddressTest::testGetDomainPart";d:0;s:74:"ValueObjects\Tests\Web\FragmentIdentifierTest::testValidFragmentIdentifier";d:0;s:73:"ValueObjects\Tests\Web\FragmentIdentifierTest::testNullFragmentIdentifier";d:0;s:76:"ValueObjects\Tests\Web\FragmentIdentifierTest::testInvalidFragmentIdentifier";d:0;s:56:"ValueObjects\Tests\Web\HostnameTest::testInvalidHostname";d:0.002;s:52:"ValueObjects\Tests\Web\IPAddressTest::testGetVersion";d:0;s:58:"ValueObjects\Tests\Web\IPAddressTest::testInvalidIPAddress";d:0;s:60:"ValueObjects\Tests\Web\IPv4AddressTest::testValidIPv4Address";d:0;s:62:"ValueObjects\Tests\Web\IPv4AddressTest::testInvalidIPv4Address";d:0;s:60:"ValueObjects\Tests\Web\IPv6AddressTest::testValidIPv6Address";d:0;s:62:"ValueObjects\Tests\Web\IPv6AddressTest::testInvalidIPv6Address";d:0;s:46:"ValueObjects\Tests\Web\PathTest::testValidPath";d:0;s:48:"ValueObjects\Tests\Web\PathTest::testInvalidPath";d:0;s:58:"ValueObjects\Tests\Web\PortNumberTest::testValidPortNumber";d:0;s:60:"ValueObjects\Tests\Web\PortNumberTest::testInvalidPortNumber";d:0;s:60:"ValueObjects\Tests\Web\QueryStringTest::testValidQueryString";d:0;s:60:"ValueObjects\Tests\Web\QueryStringTest::testEmptyQueryString";d:0;s:62:"ValueObjects\Tests\Web\QueryStringTest::testInvalidQueryString";d:0;s:56:"ValueObjects\Tests\Web\QueryStringTest::testToDictionary";d:0;s:58:"ValueObjects\Tests\Web\SchemeNameTest::testValidSchemeName";d:0;s:60:"ValueObjects\Tests\Web\SchemeNameTest::testInvalidSchemeName";d:0;s:46:"ValueObjects\Tests\Web\UrlTest::testFromNative";d:0.002;s:47:"ValueObjects\Tests\Web\UrlTest::testSameValueAs";d:0.001;s:45:"ValueObjects\Tests\Web\UrlTest::testGetDomain";d:0.001;s:57:"ValueObjects\Tests\Web\UrlTest::testGetFragmentIdentifier";d:0;s:47:"ValueObjects\Tests\Web\UrlTest::testGetPassword";d:0;s:43:"ValueObjects\Tests\Web\UrlTest::testGetPath";d:0;s:43:"ValueObjects\Tests\Web\UrlTest::testGetPort";d:0;s:50:"ValueObjects\Tests\Web\UrlTest::testGetQueryString";d:0;s:45:"ValueObjects\Tests\Web\UrlTest::testGetScheme";d:0;s:43:"ValueObjects\Tests\Web\UrlTest::testGetUser";d:0;s:44:"ValueObjects\Tests\Web\UrlTest::testToString";d:0;s:55:"ValueObjects\Tests\Web\UrlTest::testAuthlessUrlToString";d:0.001;s:55:"ValueObjects\Tests\Web\UrlTest::testNullPortUrlToString";d:0.001;s:47:"ValueObjects\Tests\Person\AgeTest::testToNative";d:0;s:50:"ValueObjects\Tests\Person\AgeTest::testSameValueAs";d:0;s:47:"ValueObjects\Tests\Person\AgeTest::testToString";d:0;s:50:"ValueObjects\Tests\Person\GenderTest::testToNative";d:0;s:53:"ValueObjects\Tests\Person\GenderTest::testSameValueAs";d:0;s:50:"ValueObjects\Tests\Person\GenderTest::testToString";d:0;}}}